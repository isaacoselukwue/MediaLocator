name: medialocator
services:
  api:
    build:
      context: ..
      dockerfile: src/main/ML.Api/Dockerfile
    ports:
      - "7092:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:8080
      - ConnectionStrings__DefaultConnection=${POSTGRES_CONNECTION_STRING}
      - ConnectionStrings__RedisConnection=${REDIS_CONNECTION_STRING}
      - JwtSettings__Secret=${JWT_SECRET}
      - RabbitMqSettings__Host=${RABBITMQ_HOST}
      - RabbitMqSettings__UserName=${RABBITMQ_USER}
      - RabbitMqSettings__Password=${RABBITMQ_PASSWORD}
      - OpenTelemetry__OtlpEndpoint=http://jaeger:4317
      - OpenTelemetry__HealthUrl=http://jaeger:16686
      - OpenVerseSettings__ClientId=${OPENVERSE_CLIENT_ID}
      - OpenVerseSettings__ClientSecret=${OPENVERSE_CLIENT_SECRET}
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - OpenApi__ServerUrl=http://localhost:7092
    depends_on:
      - postgres
      - rabbitmq
      - jaeger
    restart: unless-stopped
    networks:
      - medialocator-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    build:
      context: ..
      dockerfile: src/main/ML.Service/Dockerfile
    environment:
      - DOTNET_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=${POSTGRES_CONNECTION_STRING}
      - MailSettings__UserName=${MAIL_USERNAME}
      - MailSettings__Password=${MAIL_PASSWORD}
      - MailSettings__BaseUrl=http://localhost:7275
      - RabbitMqSettings__Host=${RABBITMQ_HOST}
      - RabbitMqSettings__UserName=${RABBITMQ_USER}
      - RabbitMqSettings__Password=${RABBITMQ_PASSWORD}
      - OpenTelemetry__OtlpEndpoint=http://jaeger:4317
      - OpenTelemetry__ServiceName=MediaLocator.Worker
    depends_on:
      - postgres
      - rabbitmq
      - jaeger
    restart: unless-stopped
    networks:
      - medialocator-network

  web:
    build:
      context: ..
      dockerfile: src/main/ML.Web/Dockerfile
      args:
        - API_BASE_URL=http://localhost:7092/
    ports:
      - "7275:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - medialocator-network

  functional-tests:
      build:
        context: ..
        dockerfile: src/tests/ML.Application.FunctionalTests/Dockerfile
      environment:
        - DOTNET_ENVIRONMENT=Development
        - ConnectionStrings__DefaultConnection=${POSTGRES_CONNECTION_STRING}
        - JwtSettings__Secret=${JWT_SECRET}
        - OpenVerseSettings__ClientId=${OPENVERSE_CLIENT_ID}
        - OpenVerseSettings__ClientSecret=${OPENVERSE_CLIENT_SECRET}
      volumes:
        - ../testresults:/testresults
      depends_on:
        postgres:
          condition: service_healthy
      networks:
        - medialocator-network
      restart: "no"
      # command: ["--filter", "Category=Unit", "--verbosity", "normal"]

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - medialocator-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - medialocator-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "14268:14268"
      - "14250:14250"
      - "4317:4317"
      - "4318:4318"
      - "16686:16686"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    restart: unless-stopped
    networks:
      - medialocator-network
  healthchecks-ui:
    image: xabarilcoding/healthchecksui:latest
    container_name: medialocator-healthchecks
    ports:
      - "8000:80"
    environment:
      - HealthChecksUI__HealthChecks__0__Name=ML.API
      - HealthChecksUI__HealthChecks__0__Uri=http://api:8080/health
      - Logging__LogLevel__Default=Information
    depends_on:
      - api
    networks:
      - medialocator-network

networks:
  medialocator-network:

volumes:
  postgres-data:
  rabbitmq-data: